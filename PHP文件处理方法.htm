<!doctype html>
<html dir="ltr" lang="zh-CN">
<head>
<title>PHP 文件处理方法</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
body {font:normal 12px/24px Arial, Helvetica, sans-serif; background:#D9F0DB;}
textarea,pre {font-family:Courier; font-size:12px;}
</style>
</head>
<body>
<p><a href='_index.htm'>&lt;&lt;目录</a></p><p><span style="font-size:18px">1、fopen() 函数</span></p>
<p><span style="font-size:18px"><span style="white-space:pre"></span>用于在 PHP 中打开文件。</span></p>
<span style="font-size:18px">函数的第一个参数含有要打开的文件的名称，第二个参数规定了使用哪种模式来打开文件：<br>
</span><pre name="code" class="html">&lt;html&gt;
&lt;body&gt;
&lt;?php
$file=fopen(&quot;welcome.txt&quot;,&quot;r&quot;);
?&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>文件可能通过下列模式来打开：<br>
r<span style="white-space:pre"> </span>只读。在文件的开头开始。<br>
r&#43;<span style="white-space:pre"> </span>读/写。在文件的开头开始。<br>
w<span style="white-space:pre"> </span>只写。打开并清空文件的内容；如果文件不存在，则创建新文件。<br>
w&#43;<span style="white-space:pre"> </span>读/写。打开并清空文件的内容；如果文件不存在，则创建新文件。<br>
a<span style="white-space:pre"> </span>追加。打开并向文件末尾进行写操作，如果文件不存在，则创建新文件。<br>
a&#43;<span style="white-space:pre"> </span>读/追加。通过向文件末尾写内容，来保持文件内容。<br>
x<span style="white-space:pre"> </span>只写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误。<br>
x&#43;<span style="white-space:pre"> </span>读/写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误。<br>
注释：如果 fopen() 函数无法打开指定文件，则返回 0 (false)。<br>
实例<br>
如果 fopen() 函数不能打开指定的文件，下面的实例会生成一段消息：<br>
<pre name="code" class="html">&lt;html&gt;
&lt;body&gt;
&lt;?php
$file=fopen(&quot;welcome.txt&quot;,&quot;r&quot;) or exit(&quot;Unable to open file!&quot;);
?&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p><span style="font-size:18px">2、fclose() 函数</span></p>
<p><span style="font-size:18px"><span style="white-space:pre"></span>用于关闭打开的文件：</span></p>
<span style="font-size:18px"></span><pre name="code" class="php">&lt;?php
$file = fopen(&quot;test.txt&quot;,&quot;r&quot;);
//some code to be executed
fclose($file);
?&gt;</pre>
<p><span style="font-size:18px">3、feof() 函数</span></p>
<p><span style="font-size:18px"><span style="white-space:pre"></span>检测是否已到达文件末尾（EOF）。</span></p>
<span style="font-size:18px">在循环遍历未知长度的数据时，feof() 函数很有用。<br>
注释：在 w 、a 和 x 模式下，您无法读取打开的文件！<br>
</span><pre name="code" class="php">if (feof($file)) echo &quot;文件结尾&quot;;</pre>
<p><span style="font-size:18px">4、fgets() 函数</span></p>
<p><span style="font-size:18px"><span style="white-space:pre"></span>用于从文件中逐行读取文件。</span></p>
<span style="font-size:18px">注释：在调用该函数之后，文件指针会移动到下一行。<br>
实例<br>
下面的实例逐行读取文件，直到文件末尾为止：<br>
</span><pre name="code" class="php">&lt;?php
$file = fopen(&quot;welcome.txt&quot;, &quot;r&quot;) or exit(&quot;Unable to open file!&quot;);
//Output a line of the file until the end is reached
while(!feof($file))
{
	echo fgets($file). &quot;&lt;br&gt;&quot;;
}
fclose($file);
?&gt;</pre>
<p><span style="font-size:18px">5、fgetc() 函数</span></p>
<p><span style="font-size:18px"><span style="white-space:pre"></span>用于从文件中逐字符地读取文件。</span></p>
<span style="font-size:18px">注释：在调用该函数之后，文件指针会移动到下一个字符。<br>
实例<br>
下面的实例逐字符地读取文件，直到文件末尾为止：<br>
</span><pre name="code" class="php">&lt;?php
$file=fopen(&quot;welcome.txt&quot;,&quot;r&quot;) or exit(&quot;Unable to open file!&quot;);
while (!feof($file))
{
echo fgetc($file);
}
fclose($file);
?&gt;</pre>
<p><span style="font-size:18px"></span></p>
<h1 style="border:0px; margin:0px 0px 10px; padding:0px; font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<span style="font-size:18px; font-weight:normal">6、fstat() 函数<br>
<span style="white-space:pre"></span>返回关于一个打开的文件的信息。<br>
该函数将返回一个包含下列元素的数组：<br>
[0] 或 [dev] - 设备编号<br>
[1] 或 [ino] - inode 编号<br>
[2] 或 [mode] - inode 保护模式<br>
[3] 或 [nlink] - 连接数目<br>
[4] 或 [uid] - 所有者的用户 ID<br>
[5] 或 [gid] - 所有者的组 ID<br>
[6] 或 [rdev] - inode 设备类型<br>
[7] 或 [size] - 文件大小的字节数<br>
[8] 或 [atime] - 上次访问时间（Unix 时间戳）<br>
[9] 或 [mtime] - 上次修改时间（Unix 时间戳）<br>
[10] 或 [ctime] - 上次 inode 改变时间（Unix 时间戳）<br>
[11] 或 [blksize] - 文件系统 IO 的块大小（如果支持）<br>
[12] 或 [blocks] - 所占据块的数目<br>
语法<br>
fstat(file)<br>
参数<span style="white-space:pre"> </span>描述<br>
file<span style="white-space:pre"> </span>必需。规定要检查的打开文件。<br>
注释：从这个函数返回的结果与服务器到服务器的结果是不相同的。这个数组包含了数字索引、名称索引或同时包含上述二者。</span></h1>
<h1 style="border:0px; margin:0px 0px 10px; padding:0px; font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<span style="font-size:18px; font-weight:normal">实例：<br>
</span><pre name="code" class="php">&lt;?php
$file = fopen(&quot;test.txt&quot;,&quot;r&quot;);
print_r(fstat($file));
fclose($file);
?&gt;</pre><span style="font-weight:normal"><span style="font-size:18px; color:#333333; background-color:rgb(255,255,255)">上面的代码将输出：<br>
Array<br>
(<br>
[0] =&gt; 0<br>
[1] =&gt; 0<br>
[2] =&gt; 33206<br>
[3] =&gt; 1<br>
[4] =&gt; 0<br>
[5] =&gt; 0<br>
[6] =&gt; 0<br>
[7] =&gt; 92<br>
[8] =&gt; 1141633430<br>
[9] =&gt; 1141298003<br>
[10] =&gt; 1138609592<br>
[11] =&gt; -1<br>
[12] =&gt; -1<br>
[dev] =&gt; 0<br>
[ino] =&gt; 0<br>
[mode] =&gt; 33206<br>
[nlink] =&gt; 1<br>
[uid] =&gt; 0<br>
[gid] =&gt; 0<br>
[rdev] =&gt; 0<br>
[size] =&gt; 92<br>
[atime] =&gt; 1141633430<br>
[mtime] =&gt; 1141298003<br>
[ctime] =&gt; 1138609592<br>
[blksize] =&gt; -1<br>
[blocks] =&gt; -1<br>
)</span><br>
</span></h1>
<div><br>
</div>
<p></p>
<p><a href='_index.htm'>&lt;&lt;目录</a></p>
</body>
</html>