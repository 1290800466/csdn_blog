<!doctype html>
<html dir="ltr" lang="zh-CN">
<head>
<title>php文件下载步骤</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
body {font:normal 12px/24px Arial, Helvetica, sans-serif; background:#D9F0DB;}
textarea,pre {font-family:Courier; font-size:12px;}
</style>
</head>
<body>
<p><a href='_index.htm'>&lt;&lt;目录</a></p><p><span style="font-size:18px"><strong>代码实例：</strong></span></p>
<p><pre name="code" class="php">&lt;?php
header(&quot;Content-type:text/html;charset=utf-8&quot;);
//PHP文件下载过程，将下载过程封装成函数
//对函数的说明
//参数说明说明：
//$file_name    文件名
//$file_sub_dir:     下载文件的子路径 &quot;/xxx/xxx/&quot;
function down_file($file_name,$file_sub_dir){
    //如果文件名称是中文，需要进行转码.              
    //原因 php文件函数，比较古老，需要对中文转码 gb2312,使用iconv()函数进行编码转换 
    $file_name=iconv(&quot;utf-8&quot;,&quot;gb2312&quot;,$file_name);
    //用相对路径表示      $file_sub_dir=./wml/
    //$file_path=$file_sub_dir.$file_name;
    //用绝对路径表示      $file_sub_dir=/wml/
    // $_SERVER[&#39;DOCUMENT_ROOT&#39;]  表示当前运行脚本所在的文档根目录
    $file_path=$_SERVER[&#39;DOCUMENT_ROOT&#39;].$file_sub_dir.$file_name;
    //绝对路径，执行效率要比相对路径高，建议使用绝对路径             
    //1.判断文件是否存在
    if(!file_exists($file_path)){
        echo &quot;文件不存在!&quot;;
        return ;
    }
    //2.以只读的方式，打开文件
    $fp=fopen($file_path,&quot;r&quot;);
              
    //获取下载文件的大小
    $file_size=filesize($file_path);
    //防止下载大文件，括号中数字单位为字节
    if($file_size&gt;30000000){                
        echo &quot;&lt;script&gt;window.alert(&#39;文件过大，不能下载！&#39;)&lt;/script&gt;&quot;;
        return ;
    }
    //下载文件需要用到的头，以下四个Header()是必需的 
    //通过这句代码客户端浏览器就能知道服务端返回的文件形式
    header(&quot;Content-type: application/octet-stream&quot;);
    //告诉客户端浏览器返回的文件大小是按照字节进行计算的
    header(&quot;Accept-Ranges: bytes&quot;);
    //告诉浏览器返回的文件大小 
    header(&quot;Accept-Length: $file_size&quot;);
    //告诉浏览器返回的文件的名称 
    header(&quot;Content-Disposition: attachment; filename=&quot;.$file_name);
    
    //向客户端回送数据      
    $buffer=1024;
    //为了下载的安全，我们最好做一个文件字节读取计数器
    $file_count=0;
    //这句话用于判断文件是否结束
    while(!feof($fp) &amp;&amp; ($file_size-$file_count&gt;0) ){
        //每次读取1024字节
        $file_data=fread($fp,$buffer);
        //统计读了多少个字节
        $file_count+=$buffer;
        //把部分数据回送给浏览器;
        echo $file_data;
    }
    //关闭文件,释放资源
    fclose($fp);
}
//测试函数是否可用
down_file(&quot;分单号给他人.png&quot;,&quot;/wml/&quot;);
?&gt;</pre><br>
<br>
</p>
<p><a href='_index.htm'>&lt;&lt;目录</a></p>
</body>
</html>