<!doctype html>
<html dir="ltr" lang="zh-CN">
<head>
<title>PHP 读取文件的主要方法</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
body {font:normal 12px/24px Arial, Helvetica, sans-serif; background:#D9F0DB;}
textarea,pre {font-family:Courier; font-size:12px;}
</style>
</head>
<body>
<p><a href='_index.htm'>&lt;&lt;目录</a></p><p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"><strong><span style="color:#ff0000">1、fread()</span></strong><br>
</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　<strong><em>string fread ( int $handle , int $length )</em></strong></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　fread() 从 handle 指向的文件中读取最多 length 个字节。该函数在读取完最多 length 个字节数，或到达 EOF 的时候，或（对于网络流）当一个包可用时，或（在打开用户空间流之后）已读取了 8192 个字节时就会停止读取文件，视乎先碰到哪种情况。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　fread()&nbsp;返回所读取的字符串，如果出错返回 FALSE。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="php">&lt;?php
    $filename = &quot;/usr/local/something.txt&quot;;
    if(file_exists($filename )){
    	$handle = fopen($filename, &quot;r&quot;);//读取二进制文件时，需要将第二个参数设置成&#39;rb&#39;
    	//通过filesize获得文件大小，将整个文件一下子读到一个字符串中
    	$contents = fread($handle, filesize ($filename));
    	echo &quot;文件的内容是:&lt;br/&gt;&quot;;
   	//在默认情况下，我们得到内容输出到网页后，不会换行,因为网页
	//不认\r\n 是换行符, \r\n -&gt;&lt;br/&gt;
	$contents=str_replace(&quot;\r\n&quot;,&quot;&lt;br/&gt;&quot;,$contents);
	echo $contents;
    }else{
	echo &quot;文件不存在!&quot;;
    }
    fclose($handle);
?&gt;</pre>
<p></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　如果所要读取的文件不是本地普通文件，而是远程文件或者流文件，就不能用这种方法，因为，filesize不能获得这些文件的大小。此时，你需要通过feof()或者fread()的返回&#20540;判断是否已经读取到了文件的末尾。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　例如：</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="php">&lt;?php
    $handle = fopen(&#39;http://www.baidu.com&#39;, &#39;r&#39;);
    $content = &#39;&#39;;
    //对于较大的文件循环读取比较合理，每次读取文件一定数量的字节数
    while(!feof($handle)){
	//8080 表示每次读取的文件大小，对于较大的文件这样读取比较合理
        $content .= fread($handle, 8080);
    }
    echo $content;
    fclose($handle);
?&gt;</pre>
<p></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="color:rgb(255,0,0); font-size:18px"><strong>2、fgets()</strong></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　<strong><em>　string fgets ( int $handle [, int $length ] )</em></strong></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"><strong><em></em></strong>　　fgets()从 handle 指向的文件中读取一行并返回长度最多为 length - 1 字节的字符串。碰到换行符（包括在返回&#20540;中）、EOF 或者已经读取了 length - 1 字节后停止（看先碰到那一种情况）。如果没有指定 length，则默认为 1K，或者说 1024 字节。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span><pre name="code" class="php">&lt;?php
    $handle = fopen(&#39;./file.txt&#39;, &#39;r&#39;);
    while(!feof($handle)){
        echo fgets($handle, 1024);
    }
    fclose($handle);
?&gt;</pre></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　<strong>Note:</strong>&nbsp;length 参数从 PHP 4.2.0 起成为可选项，如果忽略，则行的长度被假定为 1024。从 PHP 4.3 开始，忽略掉 length 将继续从流中读取数据直到行结束。如果文件中的大多数行都大于 8KB，则在脚本中指定最大行的长度在利用资源上更为有效。从 PHP 4.3 开始本函数可以安全用于二进制文件。早期的版本则不行。<br>
</span><strong><span style="font-size:18px; color:#ff0000">3、fgetss()</span></strong></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px"><span style="white-space:pre"></span>fgetss() 函数从打开的文件中返回一行，并过滤掉 HTML 和 PHP 标签。</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px"><span style="white-space:pre"></span>fgetss() 函数会在到达指定长度或读到文件末尾（EOF）时（以先到者为准），停止返回一个新行。</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px"><span style="white-space:pre"></span>如果失败该函数返回 FALSE。</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px"><span style="white-space:pre"></span>语法：fgetss(file,length,tags)</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px"><span style="white-space:pre"></span>参数<span style="white-space:pre"></span>描述<br>
<span style="white-space:pre"></span>file<span style="white-space:pre"> </span>必需。规定要检查的文件。<br>
<span style="white-space:pre"></span>length<span style="white-space:pre"> </span>
可选。规定要读取的字节数。默认是 1024 字节。<br>
<span style="white-space:pre"></span>tags<span style="white-space:pre"> </span>可选。指定将被删除的标签。</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px"></span></p>
<pre name="code" class="php">&lt;?php
    $handle = fopen(&#39;./file.txt&#39;, &#39;r&#39;);
    while(!feof($handle)){
        echo fgetss($handle, 1024, &#39;&lt;br&gt;&#39;);
    }
    fclose($handle);
?&gt;</pre>
<p></p>
<div class="cnblogs_code" style="font-family:Arial; line-height:26px">
<div class="cnblogs_code_toolbar"><span style="font-size:18px; color:#ff0000"><strong>4、file()</strong></span><br>
</div>
</div>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　<em><strong>array file ( string $filename [, int $use_include_path [, resource $context ]] )</strong></em><br>
　　将文件内容读入一个数组中，数组的每一项对应文件中的一行，包括换行符在内。不需要行结束符时可以使用 rtrim() 函数过滤换行符。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="php">&lt;?php
    $a = file(&#39;./file.txt&#39;);
    foreach($a as $line =&gt; $content){
        echo &#39;line &#39;.($line + 1).&#39;:&#39;.$content;
    }
?&gt;</pre>
<p></p>
<div class="cnblogs_code" style="font-family:Arial; line-height:26px">
<div class="cnblogs_code_toolbar"><span style="font-size:18px"><strong><span style="color:#ff0000">5、readfile()</span></strong></span></div>
</div>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　<em><strong>int readfile ( string $filename [, bool $use_include_path [, resource $context ]] )</strong></em></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　读入一个文件并写入到输出缓冲。返回从文件中读入的字节数。如果出错返回 FALSE 并且除非是以 @readfile() 形式调用，否则会显示错误信息。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"><span style="white-space:pre">readfile</span>() 函数读取文件不需要打开文件。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="php">&lt;?php
    $size = readfile(&#39;./file.txt&#39;);
    echo $size;
?&gt;</pre>
<p></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<strong><span style="font-size:18px; color:#ff0000">&nbsp;6、file_get_contents</span></strong><br>
</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　<em><strong>string file_get_contents ( string $filename [, bool $use_include_path [, resource $context [, int $offset [, int $maxlen ]]]] )</strong></em></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　将文件读入一个字符串。第三个参数<em><strong>$context</strong></em>可以用来设置一些参数，比如访问远程文件时，设置超时等等。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　另外，file_get_contents相对于以上几个函数，性能要好得多，所以应该优先考虑使用file_get_contents。但是readfile貌&#20284;比file_get_contents性能好一点<strong><span style="color:rgb(255,0,0)">（？）</span></strong>，因为它不需要调用fopen。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="php">&lt;?php 
	$file_path=&quot;test.css&quot;;
	$con=file_get_contents($file_path);
	//替换
	$con=str_replace(&quot;\r\n&quot;,&quot;&lt;br/&gt;&quot;,$con);
	echo $con;
?&gt;</pre>
<p></p>
<div class="cnblogs_code" style="font-family:Arial; line-height:26px">
<div class="cnblogs_code_toolbar"><span style="color:rgb(255,0,0); font-size:18px">7、parse_ini_file()</span></div>
</div>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　<em><strong>array parse_ini_file ( string $filename [, bool $process_sections ] )</strong></em></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　parse_ini_file() 载入一个由 filename 指定的 ini 文件，并将其中的设置作为一个联合数组返回。如果将最后的 process_sections 参数设为 TRUE，将得到一个多维数组，包括了配置文件中每一节的名称和设置。process_sections 的默认&#20540;是 FALSE。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　注意：</span></p>
<p style="margin-top:0px; margin-bottom:0px; margin-left:60px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">1. 如果 ini 文件中的&#20540;包含任何非字母数字的字符，需要将其括在双引号中（&quot;）。<br>
2. 有些保留字不能作为 ini 文件中的键名，包括：null，yes，no，true 和 false。&#20540;为 null，no 和 false 等效于 &quot;&quot;，&#20540;为 yes 和 true 等效于 &quot;1&quot;。字符 {}|&amp;~![()&quot; 也不能用在键名的任何地方，而且这些字符在选项&#20540;中有着特殊的意义。</span></p>
<p style="margin-top:0px; margin-bottom:0px; margin-left:60px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">3. 要读取的文件不一定是 .ini 后缀的，其他后缀文件也可如此访问</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">test.ini文件内容：</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="plain">; This is a sample configuration file
; Comments start with &#39;;&#39;, as in php.ini

[first_section]
one = 1
five = 5
animal = BIRD

[second_section]
path = &quot;/usr/local/bin&quot;
URL = &quot;http://www.example.com/~username</pre>
<p></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">test.php内容：</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="php">&lt;?php 
    $config = parse_ini_file(&#39;./test.ini&#39;, true);
    print_r($config);
?&gt;</pre>
<p></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">输出内容：</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px"></span></p>
<pre name="code" class="plain">Array
(
    [first_section] =&gt; Array
        (
            [one] =&gt; 1
            [five] =&gt; 5
            [animal] =&gt; BIRD
        )

    [second_section] =&gt; Array
        (
            [path] =&gt; /usr/local/bin
            [URL] =&gt; http://www.example.com/~username
        )

)</pre>
<p></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">几个注意事项：</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　1.&nbsp;鼓励在处理二进制文件时使用&nbsp;<em>b</em>&nbsp;标志，即使系统并不需要，这样可以使脚本的移植性更好。&nbsp;</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　2.&nbsp;allow_url_fopen选项激活了 URL 形式的 fopen 封装协议使得可以访问 URL 对象例如文件。默认的封装协议提供用 ftp 和 http 协议来访问远程文件，一些扩展库例如 zlib 可能会注册更多的封装协议。出于安全性考虑，此选项只能在 php.ini 中设置。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; line-height:26px">
<span style="font-size:18px">　　3.&nbsp;如果要打开有特殊字符的 URL （比如说有空&#26684;），就需要使用 urlencode() 进行 URL 编码。</span></p>
<p><a href='_index.htm'>&lt;&lt;目录</a></p>
</body>
</html>