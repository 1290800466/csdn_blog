<!doctype html>
<html dir="ltr" lang="zh-CN">
<head>
<title>javascript 函数详解</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
body {font:normal 12px/24px Arial, Helvetica, sans-serif; background:#D9F0DB;}
textarea,pre {font-family:Courier; font-size:12px;}
</style>
</head>
<body>
<p><a href='_index.htm'>&lt;&lt;目录</a></p><p align="left"><span style="font-size:18px"><span style="color:#ff0000"><strong>1、函数：</strong></span><br>
为完成某一个功能的程序指令（语句）的集合，称为函数。<br>
在js中，函数分为：自定义函数、系统函数（经常查看js帮助手册）<br>
③基本语法<br>
function 函数名(参数列表){<br>
//代码…<br>
return &#20540;;//可以选择<br>
}</span></p>
<p align="left"><span style="font-size:18px">例如：</span></p>
<p align="left"><pre name="code" class="html">&lt;html&gt;
       &lt;head&gt;
              &lt;scriptlanguage=&quot;javascript&quot;&gt;
                     //输入两个数，再输入一个运算符（+_*/），得到结果
                     varnum1=window.prompt(&quot;请输入第一个num&quot;);
                     varnum2=window.prompt(&quot;请输入第二个num&quot;);
                     varoperator=window.prompt(&quot;请输入运算符&quot;);
 
                     num1=parseFloat(num1);
                     num2=parseFloat(num2);
 
                     //如何调用函数
 
                     document.writeln(&quot;res=&quot;+jsSuan(num1,num2,operator));
                     //自定义函数
                     functionjsSuan(num1,num2,operator){ //特别强调 参数名请不要带var
                     var res=0;
                     if(operator==&quot;+&quot;){
                            res=num1+num2;
                     }elseif(operator==&quot;-&quot;){
                            res=num1-num2;
                     }elseif(operator==&quot;*&quot;){
                            res=num1*num2;
                     }else{
                            res=num1/num2;
                     }
                     return res; //返回
                     }
                    
              &lt;/script&gt;
       &lt;/head&gt;
       &lt;body&gt;&lt;/body&gt;
&lt;/html&gt;</pre><br>
<br>
</p>
<p align="left"><span style="font-size:18px"><strong>改进：</strong><br>
把上面的函数单独提出，写到js文件中，然后在需要的地方引入 &nbsp;&nbsp;</span></p>
<p align="left"><span style="font-size:18px"><span style="font-size:18px">myfuns.js</span></span></p>
<p align="left"><span style="font-size:18px"><br>
</span><pre name="code" class="javascript">function jsSuan(num1,num2,operator){ //特别强调 参数名请不要带var
                     var res=0;
                     if(operator==&quot;+&quot;){
                            res=num1+num2;
                     }elseif(operator==&quot;-&quot;){
                            res=num1-num2;
                     }elseif(operator==&quot;*&quot;){
                            res=num1*num2;
                     }else{
                            res=num1/num2;
                     }
                     return res; //返回
                     }</pre><br>
<br>
</p>
<p align="left"><span style="font-size:18px">在如下HTML文件中引入上面js代码：</span></p>
<p align="left"><span style="font-size:18px"></span><pre name="code" class="html">&lt;html&gt;
       &lt;head&gt;
              &lt;script language=&quot;javascript&quot; src=&quot;myfuns.js&quot;&gt;
		//引入js代码方法
	      &lt;/script&gt;
              &lt;script language=&quot;javascript&quot;&gt;
                     //输入两个数，再输入一个运算符（+_*/），得到结果
                     var num1=window.prompt(&quot;请输入第一个num&quot;);
                     var num2=window.prompt(&quot;请输入第二个num&quot;);
                     var operator=window.prompt(&quot;请输入运算符&quot;);
 
                     num1=parseFloat(num1);
                     num2=parseFloat(num2);
 
                     //外部引用
 
                     document.writeln(&quot;res=&quot;+jsSuan(num1,num2,operator));
              &lt;/script&gt;
       &lt;/head&gt;
       &lt;body&gt;&lt;/body&gt;
&lt;/html&gt;</pre></p>
<p align="left"><strong><span style="font-size:18px; color:#ff0000">2、函数的使用</span></strong></p>
<h1><span style="font-size:18px">（1）、系统函数：<br>
如eval()用的很多，它可以把一个字符串当做脚本来执行。在动态脚本的时候用的比较多。<br>
JavaScript&nbsp; <span style="color:#64854C">eval()</span>&nbsp;函数</span></h1>
<div align="center">
<hr size="1" width="100%" noshade="noshade" align="center" style="color:#D4D4D4">
</div>
<h2><span style="color:#333333"><span style="font-size:18px">定义和用法</span></span></h2>
<p><span style="font-size:18px"><span style="color:#333333">eval() </span><span style="color:#333333">函数计算</span><span style="color:#333333"> JavaScript</span><span style="color:#333333">字符串，并把它作为脚本代码来执行。</span></span></p>
<p><span style="font-size:18px"><span style="color:#333333">如果参数是一个表达式，</span><span style="color:#333333">eval()</span><span style="color:#333333">函数将执行表达式。如果参数是</span><span style="color:#333333">Javascript</span><span style="color:#333333">语句，</span><span style="color:#333333">eval()</span><span style="color:#333333">将执行</span><span style="color:#333333">
 Javascript</span><span style="color:#333333">语句。</span></span></p>
<h2><span style="color:#333333"><span style="font-size:18px">语法</span></span></h2>
<p style="background:#F6F4F0"><span style="color:#444444"><span style="font-size:18px">eval(<em>string</em>)</span></span></p>
<h2><span style="color:#617F10"><span style="font-size:18px">实例</span></span></h2>
<p style="background:#E5EECC"><span style="font-size:18px">执行JavaScript代码或表达式:</span></p>
<p><pre name="code" class="javascript">&lt;script&gt;

eval(&quot;x=10;y=20;document.write(x*y)&quot;);
document.write(&quot;&lt;br&gt;&quot; + eval(&quot;2+2&quot;));
document.write(&quot;&lt;br&gt;&quot; + eval(x+17));

&lt;/script&gt;</pre><br>
<br>
</p>
<p style="background:#E5EECC"><span style="font-size:18px">以上实例输出结果:</span></p>
<p><span style="font-size:18px">200<br>
4<br>
27</span></p>
<p align="left"><span style="font-size:18px"><br>
<strong>对中文</strong>进行编码，主要是为了防止乱码。先编码然后再转码。<br>
escape和unescape函数往往配合使用，可以防止乱码的出现<br>
<br>
</span></p>
<h1><span style="font-size:18px">JavaScript&nbsp;<span style="color:#64854C">escape()</span>&nbsp;函数</span></h1>
<div align="center">
<hr size="1" width="100%" noshade="noshade" align="center" style="color:#D4D4D4">
</div>
<h2><span style="color:#333333"><span style="font-size:18px">定义和用法</span></span></h2>
<p><span style="font-size:18px"><span style="color:#333333">escape() </span><span style="color:#333333">函数可对字符串进行编码，这样就可以在所有的计算机上读取该字符串。</span></span></p>
<p><span style="font-size:18px"><span style="color:#333333">该方法不会对</span><span style="color:#333333"> ASCII
</span><span style="color:#333333">字母和数字进行编码，也不会对下面这些</span><span style="color:#333333"> ASCII</span><span style="color:#333333">标点符号进行编码：</span><span style="color:#333333"> * @ - _ &#43; . /</span><span style="color:#333333">。其他所有的字符都会被转义序列替换。</span></span></p>
<p><span style="font-size:18px"><strong><span style="color:#333333">提示：</span></strong><span style="color:#333333">&nbsp;</span><span style="color:#333333">使用</span><span style="color:#333333">&nbsp;</span><span style="color:#333333"><a target="_blank" target="_blank" href="http://www.runoob.com/jsref/jsref-unescape.html"><span style="color:#64854C">unescape()</span></a>&nbsp;</span><span style="color:#333333">方法对字符串进行解码</span></span></p>
<h2><span style="color:#617F10"><span style="font-size:18px">实例</span></span></h2>
<p style="background:#E5EECC"><span style="font-size:18px">使用 escape() 来编码字符串：</span></p>
<p><pre name="code" class="javascript">&lt;script&gt;

document.write(escape(&quot;Need tips? Visit W3Cschool!&quot;));

&lt;/script&gt;</pre><br>
</p>
<p style="background:#E5EECC"><span style="font-size:18px">以上实例输出结果：</span></p>
<p><span style="font-size:18px">Need%20tips%3F%20Visit%20W3Cschool%21</span></p>
<p align="left"><span style="font-size:18px">&nbsp;</span></p>
<h1><span style="font-size:18px">JavaScript&nbsp;<span style="color:#64854C">unescape()</span>&nbsp;函数</span></h1>
<div align="center">
<hr size="1" width="100%" noshade="noshade" align="center" style="color:#D4D4D4">
</div>
<h2><span style="color:#333333"><span style="font-size:18px">定义和用法</span></span></h2>
<p><span style="font-size:18px"><span style="color:#333333">unescape() </span><span style="color:#333333">函数可对通过</span><span style="color:#333333"> escape()</span><span style="color:#333333">编码的字符串进行解码。</span></span></p>
<p><span style="font-size:18px"><strong><span style="color:#333333">提示：</span></strong><span style="color:#333333">&nbsp;</span><span style="color:#333333">使用函数</span><span style="color:#333333"><a target="_blank" target="_blank" href="http://www.runoob.com/jsref/jsref-escape.html"><span style="color:#64854C">escape()</span></a>&nbsp;</span><span style="color:#333333">对字符串进行编码。</span></span></p>
<p><span style="color:#617F10"><span style="font-size:18px">实例</span></span></p>
<p style="background:#E5EECC"><span style="font-size:18px">在本例中，我们将使用 escape() 来编码字符串，然后使用 unescape() 对其解码：</span></p>
<p><pre name="code" class="javascript">&lt;script&gt;

var str=&quot;Need tips? Visit W3Schools!&quot;;
var str_esc=escape(str);
document.write(str_esc + &quot;&lt;br&gt;&quot;)
document.write(unescape(str_esc))

&lt;/script&gt;</pre><br>
</p>
<p style="background:#E5EECC"><span style="font-size:18px">以上实例输出结果：</span></p>
<p><span style="font-size:18px">Need%20tips%3F%20Visit%20W3Cschool%21<br>
Need tips? Visit W3Cschool!</span></p>
<p align="left"><span style="font-size:18px">&nbsp;</span></p>
<p align="left"><span style="font-size:18px"><strong>函数的定义</strong><br>
<br>
function 函数名(参数列表){<br>
语句; //函数(方法)主体<br>
return 返回&#20540;;<br>
}<br>
<br>
1.参数列表：表示函数的输入<br>
2.函数主体：表示为了实现某一功能代码块<br>
3.函数可以有返回&#20540;，也可以没有</span></p>
<p align="left"><span style="font-size:18px">4. 方法可以没有返回&#20540;，但最多只能有一个返回&#20540;。</span></p>
<p align="left"><span style="font-size:18px"><br>
<strong><span style="color:#ff0000">3、函数的几种调用方式</span></strong><br>
①函数名(传递给函数的参数1,传递给函数的参数2,…)<br>
②变量=函数名;（不推荐用）<br>
此时变量就相当于函数的引用(指针)，可以这样调用函数：<br>
变量(实际参数…)<br>
<strong>特别说明</strong><br>
1.对于有返回&#20540;的函数调用，也可以在程序中直接使用返回的结果，例如：alert(&quot;res=&quot;&#43;sum(2,3));</span></p>
<p align="left"><span style="font-size:18px">2.没有返回&#20540;的函数，则返回undefined。</span></p>
<p align="left"><span style="font-size:18px"><br>
<strong>函数调用的方式</strong></span></p>
<p align="left"><span style="font-size:18px"><strong>1.普通调用</strong><br>
函数名(实际参数…);<br>
<strong>2.通过指向函数的变量去调用</strong><br>
var myvar=函数名;<br>
myvar(实际参数);<br>
<strong>3.关于接收函数返回&#20540;的问题</strong><br>
var myvar=test('abc');<br>
//如果test函数没有返回&#20540;，但是你又接收了，则返回的就是undefined<br>
//先输出函数调用abc，然后再输出undefined<br>
window.alert(myvar);</span></p>
<p align="left"><span style="font-size:18px">//如果有返回&#20540;，则，是什么就是什么</span></p>
<p align="left"><span style="font-size:18px"><br>
<strong>函数——调用过程<br>
<br>
<br>
递归，</strong>下面的js代码会输出什么<br>
</span><pre name="code" class="html">&lt;html&gt;
    &lt;head&gt;
        &lt;scriptlanguage=&quot;javascript&quot;&gt;
            //abc是一个函数，它接收数值
            functionabc(num1){
                if(num1&gt;3){
                    abc(--num1);//递归
                }
                document.writeln(num1);
            }
            abc(5);
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;&lt;/body&gt;
&lt;/html&gt;</pre><br>
<br>
</p>
<p align="left"><strong><span style="color:#993300"><span style="font-size:18px">&nbsp;</span></span></strong></p>
<p align="left"><span style="font-size:18px"><strong>先复习下：</strong>&#43;&#43;和--<br>
b=&#43;&#43;a;先自加，然后再赋&#20540;；<br>
b=a&#43;&#43;;先赋&#20540;，然后再自加；<br>
<br>
</span></p>
<p align="left"><span style="font-size:18px"><strong>程序依次打印输出：3 3 4。</strong></span></p>
<p align="left"><span style="font-size:18px">对执行函数时，就要开辟新栈，新栈执行完毕后，就要被销毁，然后退回。<br>
<br>
<strong>函数——深入使用</strong><br>
①函数的参数列表可以是多个<br>
②函数列表可以是多个，并且数据类型可以是任意的类<br>
③js支持参数个数可变的函数</span></p>
<p align="left"><span style="font-size:18px">④js支持创建动态函数</span></p>
<p align="left"><pre name="code" class="html">&lt;html&gt;
    &lt;head&gt;
        &lt;scriptlanguage=&quot;javascript&quot;&gt;
            //编写一个函数，可以接受任意多个数，并计算他们的和
            functionabc(){
                //在js中有一个arguments，可以访问所以传入值
                //打印参数的个数
                //window.alert(arguments.length);
                //既然能得到参数的个数，就用for循环遍历，参数具体的值
                //遍历所有的参数
                varres=0;
                for(vari=0;i&lt;arguments.length;i++){
                    window.alert(arguments[i]);
                    res+=arguments[i];
                }
                window.alert(res);
            }
            abc(4,3,5);
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;&lt;/body&gt;
&lt;/html&gt;</pre><br>
<br>
</p>
<p align="left"><span style="font-size:18px"><strong>注：</strong><br>
（1）javascript是弱数据类型语言<br>
（2）特别强调一下，js的函数天然支持可变参数。javascript天然支持可变，之所以天然支持可变，和语言本身的特点是有关系的，因为它是动态语言，它在执行的瞬间才去判读</span></p>
<p align="left"><span style="font-size:18px">（3）javascript不支持重载.</span></p>
<p><a href='_index.htm'>&lt;&lt;目录</a></p>
</body>
</html>