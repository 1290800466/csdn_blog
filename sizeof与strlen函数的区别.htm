<!doctype html>
<html dir="ltr" lang="zh-CN">
<head>
<title>sizeof与strlen函数的区别</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
body {font:normal 12px/24px Arial, Helvetica, sans-serif; background:#D9F0DB;}
textarea,pre {font-family:Courier; font-size:12px;}
</style>
</head>
<body>
<p><a href='_index.htm'>&lt;&lt;目录</a></p><h2><br>
</h2>
<p><span style="color:rgb(51,51,51)">strlen</span><span style="color:rgb(51,51,51)">是函数，而sizeof</span>是算符</p>
<p>strlen函数，用来求字符串的长度，sizeof函数是用来求指定变量或变量类型（操作数）等所占用内存的大小且存储大小由操作数的类型决定。</p>
<p>　　若操作数具有类型char、unsigned char或signed char，其结果等于1。 </p>
<p>ANSI C正式规定字符类型为1字节。 其他类型：int（4）、unsigned int（4） 、short int（2）、unsigned short（2） 、longint（4） 、unsigned long（4）、float（4）、double（8）、longdouble（8）</p>
<p>当操作数是指针时，sizeof依赖于编译器。例如Microsoft C/C&#43;&#43;7.0中，near类指针字节数为2，far、huge类指针字节数为4。一般Unix的指针字节数为4，
<span style="background:yellow">一般来说指针字节数为4</span>。</p>
<p>例1： </p>
<p>int*p;&nbsp;&nbsp;&nbsp; int a[5];</p>
<p>p= a;</p>
<p>sizeof(p)的结果是4。</p>
<p>例2：</p>
<p>&nbsp;const char*pstars[]={&quot;aa&quot;,&quot;bb&quot;,&quot;cc&quot;,&quot;dd&quot;};</p>
<p>constint starCount=size of pstars/sizeof pstars[0];</p>
<p>sizeofpstars[0]的结果是4</p>
<p>当操作数具有数组类型时，其结果是数组的总字节数。</p>
<p>例如：int a[12];&nbsp;&nbsp;&nbsp; sizeof(a)的结果是12 * 4 = 48。</p>
<p>联合类型操作数的sizeof是其最大字节成员的字节数。结构类型操作数的sizeof是这种类型对象的总字节数，包括任何垫补在内。&nbsp; </p>
<p>　　让我们看如下结构：</p>
<p>　　struct {char b; double x;} a;</p>
<p>vc6.0结果为16</p>
<p>这是因为编译器在考虑对齐问题时，在结构中插入空位以控制各成员对象的地址对齐。如double类型的结构成员x要放在被8整除的地址。</p>
<p>对于静态数组处理：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; char str[20]=&quot;0123456789&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; strlen(str)=10;&nbsp;&nbsp; //表示数组中字符串的长度</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; sizeof(str)=20;&nbsp;&nbsp; //表示数组变量分配的长度</p>
<p>&nbsp;&nbsp; 对于指针处理：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; char *str=&quot;0123456789&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; strlen(str)=10;&nbsp;&nbsp;&nbsp;&nbsp; //表示字符串的长度</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; sizeof(str)=4;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //表示指针变量的所占内存大小</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; sizeof(*str)=1;&nbsp;&nbsp;&nbsp;&nbsp; //表示'0'这个字符变量的所占内存大小</p>
<p>&nbsp;&nbsp;对于数组：</p>
<p>char x[]=&quot;string&quot;;<br>
&nbsp;&nbsp; x[0]=0;&nbsp;&nbsp;&nbsp; x[1]='\0';</p>
<p align="left">计算：sizeof(x) = 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strlen(x) =0&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; 声明x的时候x里面存储的是&quot;string\0&quot;，最后的\0是结束符，所以sizeof(x)就是7。<br>
而\0的asccii码&#20540;为0，strlen(x)是计算到\0位置，strlen(x)也就是0了</p>
<p>&nbsp;&nbsp;&nbsp; <span style="background:yellow">如果操作数是函数中的数组形参或函数类型的形参，sizeof</span>给出其指针的大小。</p>
<p>例如：&nbsp; </p>
<p><pre name="code" class="plain">void Func(int*c)
{
    printf(&quot;%d/n&quot;,sizeof(c));
}
void Func(intc[13])
{
    printf(&quot;%d/n&quot;,sizeof(c));
}</pre><br>
<br>
</p>
<p>打印的都是4。</p>
<p></p>
<p>&nbsp;</p>
<p></p>
<p>Strlen函数以符号\0结束</p>
<p><a href='_index.htm'>&lt;&lt;目录</a></p>
</body>
</html>