<!doctype html>
<html dir="ltr" lang="zh-CN">
<head>
<title>ajax处理返回的xml格式数据</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
body {font:normal 12px/24px Arial, Helvetica, sans-serif; background:#D9F0DB;}
textarea,pre {font-family:Courier; font-size:12px;}
</style>
</head>
<body>
<p><a href='_index.htm'>&lt;&lt;目录</a></p><p><span style="font-size:18px; color:#ff0000"><strong>以用户注册为例：</strong></span></p>
<p><span style="font-size:18px">register.php<br>
</span></p>
<p><pre name="code" class="php">&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;html&gt;
&lt;head&gt;
&lt;title&gt;用户注册&lt;/title&gt;
&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;/&gt;
&lt;script type=&quot;text/javascript&quot;&gt;

	//创建ajax引擎
	function getXmlHttpObject(){
		
		var xmlHttpRequest;
		//不同的浏览器获取对象xmlhttprequest 对象方法不一样
		if(window.ActiveXObject){
			
			xmlHttpRequest=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);
			
		}else{

			xmlHttpRequest=new XMLHttpRequest();
		}

		return xmlHttpRequest;

	}
	var myXmlHttpRequest=&quot;&quot;;

	//验证用户名是否存在
	function checkName(){
		
		myXmlHttpRequest=getXmlHttpObject();

		//怎么判断创建ok
		if(myXmlHttpRequest){
			
			//通过myXmlHttpRequest对象发送请求到服务器的某个页面
			//第一个参数表示请求的方式, &quot;get&quot; / &quot;post&quot;
			//第二个参数指定url,对哪个页面发出ajax请求(本质仍然是http请求)
			//第三个参数表示 true表示使用异步机制,如果false表示不使用异步
			var url=&quot;/ajax/registerProcess.php&quot;;
			//这个是要发送的数据
			var data=&quot;username=&quot;+$(&#39;username&#39;).value;
			//打开请求.
			myXmlHttpRequest.open(&quot;post&quot;,url,true);
			//还有一句话，这句话必须.
			myXmlHttpRequest.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);
			//指定回调函数.chuli是函数名
			myXmlHttpRequest.onreadystatechange=chuli;

			//真的发送请求,如果是get请求则填入 null即可
			//如果是post请求，则填入实际的数据
			myXmlHttpRequest.send(data); 


		}
	}

	//回调函数
	function chuli(){
		
		//window.alert(&quot;处理函数被调回&quot;+myXmlHttpRequest.readyState);
		//我要取出从registerPro.php页面返回的数据
		if(myXmlHttpRequest.readyState==4){
			
			//取出值,根据返回信息的格式定.text
			//window.alert(&quot;服务器返回&quot;+myXmlHttpRequest.responseText);

			//$(&#39;myres&#39;).value=myXmlHttpRequest.responseText;

			//看看如果取出 xml格式数据
			//window.alert(myXmlHttpRequest.responseXML);
		
			//获取mes节点
			&lt;span style=&quot;color:#ff0000;&quot;&gt;var mes=myXmlHttpRequest.responseXML.getElementsByTagName(&quot;mes&quot;);

			//取出mes节点值
			//window.alert(mes.length);
			//mes[0]-&gt;表示取出第一个mes节点
			//mes[0].childNodes[0]-&gt;表示第一个mes节点的第一个子节点
			var mes_val=mes[0].childNodes[0].nodeValue;

			$(&#39;myres&#39;).value=mes_val;
		}&lt;/span&gt;
	}

	//这里我们写一个函数
	function $(id){
		return document.getElementById(id);
	}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;form action=&quot;???&quot; method=&quot;post&quot;&gt;
    用户名字:&lt;input type=&quot;text&quot;    name=&quot;username1&quot; id=&quot;username&quot;&gt;&lt;input type=&quot;button&quot; onclick=&quot;checkName();&quot;  value=&quot;验证用户名&quot;&gt;
    &lt;input style=&quot;border-width: 0;color: red&quot; type=&quot;text&quot; id=&quot;myres&quot;&gt;
    &lt;br/&gt;
    用户密码:&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;
    电子邮件:&lt;input type=&quot;text&quot; name=&quot;email&quot;&gt;&lt;br/&gt;
    &lt;input type=&quot;submit&quot; value=&quot;用户注册&quot;&gt;
    &lt;/form&gt;
     &lt;form action=&quot;???&quot; method=&quot;post&quot;&gt;
    用户名字:&lt;input type=&quot;text&quot; name=&quot;username2&quot; &gt;
   
    &lt;br/&gt;
    用户密码:&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;
    电子邮件:&lt;input type=&quot;text&quot; name=&quot;email&quot;&gt;&lt;br/&gt;
    &lt;input type=&quot;submit&quot; value=&quot;用户注册&quot;&gt;
    &lt;/form&gt;

&lt;/body&gt;
&lt;/html&gt;&lt;/span&gt;</pre><span style="font-size:18px"><br>
<br>
regisgerProcess.php<br>
</span></p>
<p><pre name="code" class="php">&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;?php
	
	//这里两句话很重要,第一讲话告诉浏览器返回的数据是xml格式
	header(&quot;Content-Type: text/xml;charset=utf-8&quot;);
	//告诉浏览器不要缓存数据
	header(&quot;Cache-Control: no-cache&quot;);

	//接收数据(这里要和请求方式对于 _POST 还是 _GET)
	$username=$_POST[&#39;username&#39;];

	//这里我们看看如何处理格式是xml
	$info=&quot;&quot;;
	if($username==&quot;shunping&quot;){
		$info.=&quot;&lt;res&gt;&lt;mes&gt;用户名不可以用,对不起&lt;/mes&gt;&lt;/res&gt;&quot;;//注意，这里数据是返回给请求的页面.
	}else{
		$info.=&quot;&lt;res&gt;&lt;mes&gt;用户名可以用,恭喜&lt;/mes&gt;&lt;/res&gt;&quot;;
	}
	echo $info;
?&gt;	&lt;/span&gt;</pre><span style="font-size:18px"><br>
</span></p>
<p><span style="font-size:18px"><strong><span style="color:rgb(255,0,0); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">XML DOM -&nbsp;</span><span class="color_h1" style="color:rgb(255,0,0); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif; border:0px; margin:0px; padding:0px">属性和方法：</span></strong></span></p>
<p></p>
<h2 style="border:0px; margin:2px 0px; padding:0px; line-height:1.8em; color:rgb(51,51,51); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<span style="font-size:18px">XML DOM 属性</span></h2>
<p></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px">一些典型的 DOM 属性：</span></p>
<ul style="border:0px; margin:1em 0px; padding:0px; line-height:16.8px; list-style-type:none; color:rgb(51,51,51); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.nodeName - x 的名称</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.nodeValue - x 的&#20540;</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.parentNode - x 的父节点</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.childNodes - x 的子节点</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.attributes - x 的属性节点</span></li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px">注释：在上面的列表中，x 是一个节点对象。</span></p>
<h2 style="border:0px; margin:2px 0px; padding:0px; line-height:1.8em; color:rgb(51,51,51); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<span style="font-size:18px">XML DOM 方法</span></h2>
<ul style="border:0px; margin:1em 0px; padding:0px; line-height:16.8px; list-style-type:none; color:rgb(51,51,51); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.getElementsByTagName(<em>name</em>) - 获取带有指定标签名称的所有元素</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.appendChild(<em>node</em>) - 向 x 插入子节点</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px">x.removeChild(<em>node</em>) - 从 x 删除子节点</span></li></ul>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px">注释：在上面的列表中，x 是一个节点对象。</span></p>
<h2 style="border:0px; margin:2px 0px; padding:0px; line-height:1.8em; color:rgb(51,51,51); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<span style="font-size:18px">实例</span></h2>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px">从 books.xml 中的 &lt;title&gt; 元素获取文本的 JavaScript 代码：</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px">txt=xmlDoc.getElementsByTagName(&quot;title&quot;)[0].childNodes[0].nodeValue</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px">在该语句执行后，txt 保存的&#20540;是 &quot;Everyday Italian&quot;。</span></p>
<p style="border:0px; margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:2em; font-family:'Microsoft Yahei','Helvetica Neue',Helvetica,Arial,sans-serif; color:rgb(51,51,51)">
<span style="font-size:18px">解释：</span></p>
<ul style="border:0px; margin:1em 0px; padding:0px; line-height:16.8px; list-style-type:none; color:rgb(51,51,51); font-family:'Open Sans','Helvetica Neue',Helvetica,Arial,STHeiti,'Microsoft Yahei',sans-serif">
<li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px"><strong>xmlDoc</strong>&nbsp;- 由解析器创建的 XML DOM 对象</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px"><strong>getElementsByTagName(&quot;title&quot;)[0]</strong>&nbsp;- 第一个 &lt;title&gt; 元素</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px"><strong>childNodes[0]</strong>&nbsp;- &lt;title&gt; 元素的第一个子节点（文本节点）</span></li><li style="border:0px; margin:0px 0px 1em 1em; padding:0px 0px 0px 1.5em; line-height:1.5em">
<span style="font-size:18px"><strong>nodeValue</strong>&nbsp;- 节点的&#20540;（文本本身）</span></li></ul>
<br>
<p><a href='_index.htm'>&lt;&lt;目录</a></p>
</body>
</html>